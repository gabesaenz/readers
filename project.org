* Readers
** Configure the project
Move the timestamp directory within the build folder. This prevents issues with file permissions during nix build and also effectively disables timestamps.
#+BEGIN_SRC emacs-lisp
(setq org-publish-timestamp-directory "./.org-timestamps/")
#+END_SRC

Register the scrbook koma-script class so it can be used during PDF export.
#+BEGIN_SRC emacs-lisp
(with-eval-after-load "ox-latex"
  (add-to-list 'org-latex-classes
	     '("scrbook" "\\documentclass{scrbook}"
	       ("\\part{%s}" . "\\part*{%s}")
	       ("\\chapter{%s}" . "\\chapter*{%s}")
	       ("\\section{%s}" . "\\section*{%s}")
	       ("\\subsection{%s}" . "\\subsection*{%s}")
	       ("\\subsubsection{%s}" . "\\subsubsection*{%s}"))))
#+END_SRC

Define a list of ORG files to exclude from projects.
#+BEGIN_SRC emacs-lisp
(defvar exclude-list "project.org\\|readme.org")
#+END_SRC

The backquote before the value of org-publish-project-alist enables the use of commas within. Commas insert the values of variables that follow them. This does not work when using a single quote instead of a backquote.
#+BEGIN_SRC emacs-lisp
(setq org-publish-project-alist
      `(("html"
         :base-directory "."
         :base-extension "org"
         :exclude ,exclude-list
         ;; :recursive t
         :publishing-directory "./public/"
         ;; :html-doctype nil ;; this causes an error but probably won't with an actual doctype value
         ;; :html-extension nil
         ;; :html-head-extra nil
         :html-head-include-default-style nil
         ;; :html-head nil
         ;; :html-html5-fancy nil
         ;; :html-preamble nil
         :html-validation-link nil
         :html-viewport nil
         :publishing-function org-html-publish-to-html)

        ("images"
         :base-directory "./images/"
         :base-extension any
         :recursive t
         :publishing-directory "./public/images/"
         :publishing-function org-publish-attachment)

        ("pdf"
         :base-directory "."
         :base-extension "org"
         :exclude ,exclude-list
         ;; :recursive t
         :publishing-directory "./public/"
         :with-author nil
         :with-title nil
         :with-toc nil
         :with-date nil
         :latex-class "scrbook"
         :latex-compiler "xelatex"
         :publishing-function org-latex-publish-to-pdf)

        ("debug"
         :base-directory "."
         :base-extension "log\\|tex"
         ;; :recursive t
         :publishing-directory "./debug/"
         :publishing-function org-publish-attachment)

        ("website" :components ("html" "images"))))
#+END_SRC

** Publish the project
#+BEGIN_SRC emacs-lisp
(org-publish-project "website")
(org-publish-project "pdf")
(org-publish-project "debug")
#+END_SRC
